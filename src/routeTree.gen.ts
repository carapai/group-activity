/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TrackerImport } from './routes/tracker'
import { Route as IndexImport } from './routes/index'
import { Route as TrackerProgramImport } from './routes/tracker.$program'
import { Route as TrackerProgramInstancesImport } from './routes/tracker.$program.instances'
import { Route as TrackerProgramInstancesTrackedEntityImport } from './routes/tracker.$program.instances.$trackedEntity'

// Create/Update Routes

const TrackerRoute = TrackerImport.update({
  path: '/tracker',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TrackerProgramRoute = TrackerProgramImport.update({
  path: '/$program',
  getParentRoute: () => TrackerRoute,
} as any)

const TrackerProgramInstancesRoute = TrackerProgramInstancesImport.update({
  path: '/instances',
  getParentRoute: () => TrackerProgramRoute,
} as any)

const TrackerProgramInstancesTrackedEntityRoute =
  TrackerProgramInstancesTrackedEntityImport.update({
    path: '/$trackedEntity',
    getParentRoute: () => TrackerProgramInstancesRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/tracker': {
      id: '/tracker'
      path: '/tracker'
      fullPath: '/tracker'
      preLoaderRoute: typeof TrackerImport
      parentRoute: typeof rootRoute
    }
    '/tracker/$program': {
      id: '/tracker/$program'
      path: '/$program'
      fullPath: '/tracker/$program'
      preLoaderRoute: typeof TrackerProgramImport
      parentRoute: typeof TrackerImport
    }
    '/tracker/$program/instances': {
      id: '/tracker/$program/instances'
      path: '/instances'
      fullPath: '/tracker/$program/instances'
      preLoaderRoute: typeof TrackerProgramInstancesImport
      parentRoute: typeof TrackerProgramImport
    }
    '/tracker/$program/instances/$trackedEntity': {
      id: '/tracker/$program/instances/$trackedEntity'
      path: '/$trackedEntity'
      fullPath: '/tracker/$program/instances/$trackedEntity'
      preLoaderRoute: typeof TrackerProgramInstancesTrackedEntityImport
      parentRoute: typeof TrackerProgramInstancesImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  TrackerRoute: TrackerRoute.addChildren({
    TrackerProgramRoute: TrackerProgramRoute.addChildren({
      TrackerProgramInstancesRoute: TrackerProgramInstancesRoute.addChildren({
        TrackerProgramInstancesTrackedEntityRoute,
      }),
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/tracker"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/tracker": {
      "filePath": "tracker.tsx",
      "children": [
        "/tracker/$program"
      ]
    },
    "/tracker/$program": {
      "filePath": "tracker.$program.tsx",
      "parent": "/tracker",
      "children": [
        "/tracker/$program/instances"
      ]
    },
    "/tracker/$program/instances": {
      "filePath": "tracker.$program.instances.tsx",
      "parent": "/tracker/$program",
      "children": [
        "/tracker/$program/instances/$trackedEntity"
      ]
    },
    "/tracker/$program/instances/$trackedEntity": {
      "filePath": "tracker.$program.instances.$trackedEntity.tsx",
      "parent": "/tracker/$program/instances"
    }
  }
}
ROUTE_MANIFEST_END */
